#ifndef TEMPLATEMETHOD_H
#define TEMPLATEMETHOD_H

/**
* @filename         Templatemethod.h
* @brief            模板方法
* @author           HXJ
* @date             2022-05-23
**/

//动机
    //在软件构建过程中，对于某项任务，它常常有"稳定"的整体操作结构，但各个子步骤却有很对"改变"的需求,
    //或者由于固有的原因（比如框架和应用程序之间）而无法和任务的整体结构同时实现。
    //如何在确定的"稳定"的前提下，来灵活应对各个子步骤的变化或者晚期实现需求？

//定义
    //定义一个操作中的算法的骨架（稳定），而将一些步骤延迟（变化）到子类中，模板方法使得子类可以不改变
    //（复用）一个算法的结构即可重定义（重写）该算法的某些特定步骤。

//不要调用我，让我调用你
#endif // TEMPLATEMETHOD_H
